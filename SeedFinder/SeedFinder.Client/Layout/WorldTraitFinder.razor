@page "/"
@using SeedFinder.Client.Model
@using SeedFinder.Client.Model.Search
@inject ISnackbar Snackbar

<style>
    .mud-tooltip-root {
        align-self: center !important;
        justify-self: center !important;
    }

    .mud-input-control {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
        padding-right: 0 !important;
    }
</style>


@if (!DataInitialized)
{
    <MudStack Spacing="3" AlignItems="AlignItems.Center">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </MudStack>
}
else
{
    <MudContainer MaxWidth="MaxWidth.False">
        <MudStack Spacing="3" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.h3">Seed Finder</MudText>
            <!--Main game version-->
            <MudText Typo="Typo.h5">Select your game version and dlcs.</MudText>
            <MudStack Row="true" Justify="Justify.Center">
                @foreach (var dlc in Dlc.Values)
                {
                    @if (dlc.IsMainVersion)
                    {
                        <MudButton Variant="Variant.Filled" Disabled=@Query.IsDlcSelected(dlc) OnClick="()=> Query.ToggleDlc(dlc)">
                            <MudImage Height="150" Src=@dlc.Image Alt="@dlc.Name" />
                        </MudButton>
                    }
                }
            </MudStack>
            <!--content dlcs (FP)-->
            @foreach (var dlc in Dlc.Values)
            {
                <MudStack Row="true">
                    @if (!dlc.IsMainVersion)
                    {
                        <MudImage Height="50" Src=@dlc.Image Alt="@dlc.Name" />
                        <MudSwitch Value="@Query.IsDlcSelected(dlc)" ValueChanged="@((bool value)=> Query.SetDlcEnabled(dlc,value))" Color="Color.Info" Size="Size.Large" />
                    }
                </MudStack>
            }
            <!--Mode-->
            <MudStack hidden="@(!Query.MainVersionSelected())" AlignItems="AlignItems.Center">
                <MudText Typo="Typo.h5">Select your game mode:</MudText>
                <MudStack Row="true" Justify="Justify.Center">
                    @foreach (var mode in ClusterCategory.Values)
                    {
                        @if (mode.AllowedWithCurrentQuery(Query))
                        {
                            <MudButton Variant="Variant.Filled" Disabled=@Query.IsModeSelected(mode) OnClick="()=> Query.SelectMode(mode)">
                                <MudStack Spacing="1">
                                    <MudImage ObjectFit="ObjectFit.Contain" Width="100" Height="100" Src=@mode.Image Alt="@mode.Name" />
                                    <MudText Typo="Typo.body1">@mode.Name</MudText>
                                </MudStack>
                            </MudButton>
                        }
                    }
                </MudStack>
            </MudStack>

            <MudContainer hidden="@(!Query.AnyModeSelected())">
                <!--Cluster-->
                <MudText Align="Align.Center" Typo="Typo.h5">Select your Asteroid Cluster:</MudText>
                <MudStack Row="true" Justify="Justify.Center">

                    <MudGrid Spacing="3" Justify="Justify.Center">
                        @foreach (var cluster in ClusterLayout.Values)
                        {
                            @if (cluster.AllowedWithCurrentQuery(Query))
                            {
                                <MudItem>
                                    <MudButton Variant="Variant.Filled" Disabled=@(Query.IsClusterSelected(cluster)) OnClick="()=> SelectCluster(cluster)">
                                        <MudStack Spacing="1" AlignItems="AlignItems.Center">
                                            <MudImage ObjectFit="ObjectFit.Contain" Width="110" Height="110" Src="@cluster.Image" Alt="@cluster.Name" />
                                            <MudText Align="Align.Center" Style="width: 106px; overflow-wrap:break-word;max-width:108px;height:40px; text-align: center; vertical-align:central" Typo="Typo.body2">@cluster.DisplayName</MudText>
                                        </MudStack>
                                    </MudButton>
                                </MudItem>
                            }
                        }
                    </MudGrid>
                </MudStack>
            </MudContainer>

            <MudContainer MaxWidth="MaxWidth.ExtraLarge" hidden="@(Query?.SelectedCluster == null)">
                <MudPaper Class="pa-3">
                    <MudStack Spacing="2" AlignItems="AlignItems.Center">
                        <MudStack Row="true" Justify="Justify.Center" Spacing="3">
                            <MudText GutterBottom Typo="Typo.h5">Configure your @Query?.SelectedCluster?.Name:</MudText>
                        </MudStack>
                        <MudSpacer></MudSpacer>
                        <MudGrid Spacing="2" Justify="Justify.Center">
                            @for (int i = 0; i < Query?.SelectedCluster?.WorldPlacements.Count; ++i)
                            {
                                int maxCount = Query.SelectedCluster.WorldPlacements.Count;
                                var placements = Query.SelectedCluster.WorldPlacements;
                                bool isStarter = i == Query.SelectedCluster.startWorldIndex && maxCount > 1; //no extra starter marking in base game
                                var world = placements[i].Asteroid;
                                string starterColor = isStarter ? "#904600" : "#0f0f0f";
                                var queryAsteroid = Query.AsteroidParams[world];
                                <MudItem>
                                    <MudPaper MinHeight="110px" MinWidth="300px" Elevation="90" Outlined Class="pa-2">
                                        <MudStack Spacing="1" AlignItems="AlignItems.Start" Row Style="width:410px;" StretchItems="StretchItems.End">
                                            <MudImage ObjectFit="ObjectFit.Contain" Width="120" Height="120" Src="@world.Image" Alt="@world.Name" />

                                            <MudStack AlignItems="AlignItems.Stretch" Spacing="1" Justify="Justify.FlexStart">
                                                @if (isStarter)
                                                {
                                                    <MudTooltip Text="Starter Asteroid" Arrow Placement="Placement.Right" Style="justify-self:center">
                                                        <ChildContent>
                                                            <MudStack Row Style="align-self:center" AlignItems="AlignItems.Center" StretchItems="StretchItems.Start" Spacing="1" Justify="Justify.Center">
                                                                <MudText Align="Align.Center" Typo="Typo.h6" Style="text-overflow:ellipsis; white-space: nowrap;">@world.Name</MudText>
                                                                <MudImage ObjectPosition="ObjectPosition.Center" Src="icons/printingpod.ico" Width="30" Height="30" ObjectFit="ObjectFit.Contain"></MudImage>
                                                            </MudStack>
                                                        </ChildContent>

                                                    </MudTooltip>
                                                }
                                                else
                                                {
                                                    <MudText Align="Align.Center" Typo="Typo.h6" Style="text-overflow:ellipsis; white-space: nowrap;">@world.Name</MudText>
                                                }
                                                @if (queryAsteroid.CannotHaveTraits())
                                                {
                                                    <MudText Align="Align.Center" Typo="Typo.body1">This asteroid cannot generate any traits.</MudText>
                                                }
                                                else
                                                {

                                                    <!--Hack for visualizing traits by icon only-->
                                                    <MudStack Row Style="height:0px; margin-top:-4px; overflow:visible" Class="pl-4 pr-4">
                                                        <MudVirtualize Items="@queryAsteroid.Guarantee.ToList()" Context="trait">
                                                            <MudImage Elevation="50" Style="position: relative; top: 12px" ObjectPosition="ObjectPosition.Center" Src="@trait.Image" Width="24" Height="24" ObjectFit="ObjectFit.Contain"></MudImage>
                                                        </MudVirtualize>
                                                    </MudStack>

                                                    <MudSelect Disabled="@(queryAsteroid.HasFixedTraits()||Query.SelectedCluster.HasFixedCoordinate())"
                                                                       FullWidth="true"
                                                                       Variant="Variant.Outlined"
                                                                       T=WorldTrait
                                                                       MultiSelection
                                                                       Clearable
                                                                       Dense
                                                                       Margin="Margin.Dense"
                                                                       AnchorOrigin="Origin.BottomCenter"
                                                                       TransformOrigin="Origin.TopCenter"
                                                               Label="Guaranteed Traits"
                                                               ToStringFunc="@((_)=> (queryAsteroid.Guarantee.Count()>0) ? "‎ ":string.Empty)"
                                                               MultiSelectionTextFunc="@((_)=> (queryAsteroid.Guarantee.Count()>0) ? "‎ ":string.Empty)"
                                                               ValuePresenter="ValuePresenter.ItemContent"
                                                                       @bind-SelectedValues="queryAsteroid.Guarantee">

                                                            <MudVirtualize Items="@queryAsteroid.GetAllWorldCompatibleTraits()" Context="trait">
                                                                <MudSelectItem Disabled="@(!queryAsteroid.CanAddGuaranteedTrait(trait))" Value="@(trait)">
                                                                    <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                                                                        <MudImage ObjectPosition="ObjectPosition.Left" Src="@trait.Image" Width="24" Height="24" ObjectFit="ObjectFit.Contain"></MudImage>
                                                                        <MudText Style="@($"color:#{trait.ColorHex};")">@trait.Name</MudText>
                                                                    </MudStack>
                                                                </MudSelectItem>
                                                            </MudVirtualize>

                                                    </MudSelect>

                                                    <MudStack Row Style="height:0px; margin-top:-4px; overflow:visible" Class="pl-4 pr-4">
                                                        <MudVirtualize Items="@queryAsteroid.Prohibit.ToList()" Context="trait">
                                                            <MudImage Elevation="50" Style="position: relative; top: 12px" ObjectPosition="ObjectPosition.Center" Src="@trait.Image" Width="24" Height="24" ObjectFit="ObjectFit.Contain"></MudImage>
                                                        </MudVirtualize>
                                                    </MudStack>


                                                    <MudSelect FullWidth="true"
                                                                       Disabled="@(queryAsteroid.HasFixedTraits()||Query.SelectedCluster.HasFixedCoordinate())"
                                                                       Variant="Variant.Outlined"
                                                                       T=WorldTrait
                                                                       MultiSelection
                                                                       
                                                                       Dense
                                                                       Margin="Margin.Dense"
                                                                       AnchorOrigin="Origin.BottomCenter"
                                                                       TransformOrigin="Origin.TopCenter"
                                                               Label="Forbidden Traits"
                                                               Clearable
                                                               ToStringFunc="@((_)=> (queryAsteroid.Prohibit.Count()>0) ? "‎ ":string.Empty)"
                                                               MultiSelectionTextFunc="@((_)=> (queryAsteroid.Prohibit.Count()>0) ? "‎ ":string.Empty)"
                                                               @bind-SelectedValues="queryAsteroid.Prohibit">

                                                        <MudVirtualize Items="@queryAsteroid.GetAllWorldCompatibleTraits()" Context="trait">
                                                            <MudSelectItem Disabled="@(!queryAsteroid.CanAddProhibitedTrait(trait))" Value="@(trait)">
                                                                <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                                                                    <MudImage ObjectPosition="ObjectPosition.Left" Src="@trait.Image" Width="24" Height="24" ObjectFit="ObjectFit.Contain"></MudImage>
                                                                    <MudText Style="@($"color:#{trait.ColorHex};")">@trait.Name</MudText>
                                                                </MudStack>
                                                            </MudSelectItem>
                                                        </MudVirtualize>
                                                    </MudSelect>
                                                }
                                            </MudStack>

                                        </MudStack>
                                    </MudPaper>
                                </MudItem>
                            }
                        </MudGrid>
                        <MudSpacer></MudSpacer>
                        <MudStack Row Justify="Justify.Center">
                            <MudButton OnClick="(_)=> Query?.ResetFilters()" Color="Color.Secondary">Reset Filters</MudButton>
                            <MudButton OnClick="(_)=> Query?.StartSearching()" Color="Color.Primary">Start Search</MudButton>
                        </MudStack>
                    </MudStack>
                </MudPaper>
            </MudContainer>
        </MudStack>
    </MudContainer>
}



@code {
    private bool DataInitialized = true;
    private SearchQuery Query = new();

    private ClusterCategory? SelectedClusterCategory;
    private ClusterLayout? clusterLayout;


    protected override void OnInitialized()
    {
        base.OnInitialized();
        Query = new();
    }
    protected override async Task OnInitializedAsync()
    {
        if (DataImport.ImportGameData(true))
            DataInitialized = true;
    }
    public void SelectCluster(ClusterLayout cluster)
    {
        if (cluster.HasFixedCoordinate())
            Snackbar.Add("This cluster always generates the same!", Severity.Warning);

        Query.SelectCluster(cluster);
    }
}
